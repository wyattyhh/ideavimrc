let mapleader = " "

" General"
set scrolloff=8
set incsearch
set hlsearch
set relativenumber number
set showcmd
set ignorecase smartcase
set history=100
set nrformats-=octal
set scrolloff=5
set sidescrolloff=5
set visualbell

" Movements"
imap jk <Esc>
imap <C-a> <Esc>I
imap <C-e> <Esc>A
imap <C-f> <Right>
imap <C-b> <Left>
imap <C-n> <Down>
imap <C-p> <Up>
"map <C-a> 0
map <C-e> $

" Tabs"
map H gT
map L gt
map <leader>to :tabo<CR>

" Save or Quit"
map <C-s> :w<CR>
imap <C-s> <Esc>:w<CR>
map <leader>q :wq<CR>
map <leader>! :q!<CR>

" Switch Panels"
map <leader>h <C-w>h
map <leader>l <C-w>l
map <leader>j <C-w>j
map <leader>k <C-w>k

" Edit"
map <M-d> \"_d
map <M-c> \"_c
map <M-p> \"_dP
map <M-x> \"_x
map <leader>y \"*y
map <leader>p \"*p


if has('ide')
    "" Basic
    set nooldundo
    set ideajoin
    set ideamarks
    set argtextobj
    set iskeyword+=-,#

    "" Plugins
    "map S :ation AceDeclarationAction<CR>
    "map s :action emacsIDEAs.AceJump<CR>
    Plug 'justinmk/vim-sneak'
    Plug 'preservim/nerdtree'
    let g:NERDTreeMapPreview='l'
    let g:NERDTreeMapJumpParent='h'
    let g:NERDTreeMapQuit='<space>e'
    Plug 'tpope/vim-surround'		    " ys, cs, ds, S
    Plug 'terryma/vim-multiple-cursors'	" See below for remapped keys. <A-n> doesn't work on Mac
    Plug 'tpope/vim-commentary'		    " [count]gc{motion}, o_gc, v_gc, gcc
    Plug 'vim-scripts/ReplaceWithRegister'  " [count][{reg}]gr{motion}, [count][{reg}]grr, {Visual}[{reg}]gr
    Plug 'vim-scripts/argtextobj.vim'	    " argument text objects: aa, ia
    Plug 'tommcdo/vim-exchange'		    " cx{motion} to select, again to exchange
    Plug 'kana/vim-textobj-entire'		" entire buffer text object: ae
    Plug 'machakann/vim-highlightedyank'
    let g:highlightedyank_highlight_color = "rgba(255, 250, 160, 100)"
    let g:highlightedyank_highlight_duration = "1000"
    set vim-paragraph-motion
    Plug 'michaeljsmith/vim-indent-object'
    packadd matchit "matchit.vim
    set quickscope
    let g:qs_highlight_on_keys = ['f', 'F', 't', 'T']
    ""set which-key
    ""set timeoutlen=5000
    :set keep-english-in-normal
    set keep-english-in-normal

    " Remap multiple-cursors shortcuts to match terryma/vim-multiple-cursors
    nmap <C-n> <Plug>NextWholeOccurrence
    xmap <C-n> <Plug>NextWholeOccurrence
    nmap g<C-n> <Plug>NextOccurrence
    xmap g<C-n> <Plug>NextOccurrence
    xmap <C-x> <Plug>SkipOccurrence
    xmap <C-p> <Plug>RemoveOccurrence

    " collapse
    nmap zc <Action>(ExpandCollapseToggleAction)
    nmap za <Action>(CollapseAllRegions)
    nmap zA <Action>(ExpandAllRegions)

    nmap [[ <Action>(MethodUp)
    nmap ]] <Action>(MethodDown)
    nmap ]e <Action>(GotoNextError)
    nmap [e <Action>(GotoPreviousError)
    nmap ]q <Action>(GotoNextElementUnderCaretUsage)
    nmap [q <Action>(GotoPrevElementUnderCaretUsage)
    nmap gD <Action>(GotoTypeDeclaration)
    nmap gh <Action>(ShowHoverInfo)
    nmap gL <Action>(QuickImplementations)
    nmap gp <Action>(QuickPreview)
    nmap gu <Action>(ShowUsages)

    nmap <leader>rr :action ReformatCode<CR>
    nmap <leader>a :action Annotate<CR>
    nmap <leader>z3 :action ExpandAllToLevel3<CR>

    " location
    nmap <C-i> <Action>(Back)
    nmap <C-o> <Action>(Forward)

    " buffer (buffer < window < tab)
    nmap <leader>bb :action Switcher<CR>
    nmap <leader>bd <Action>(CloseContent)
    nmap <leader>ba <Action>(CloseAllEditors)
    nmap <leader>bo <Action>(CloseAllEditorsButActive)
    nmap <leader>bp <Action>(CloseAllUnpinnedEditors)

    " refactor
    nmap <leader>rn <Action>(RenameElement)
    nmap <leader>re <Action>(Refactorings.QuickListPopupAction)
    nmap <leader>uw <Action>(Unwrap)
    nmap <leader>sw <Action>(SurroundWith)
    nmap <leader>sd <Action>(SafeDelete)
    nmap <leader>oi <Action>(OptimizeImports)

    " terminal
    nmap <leader>tt <Action>(ActivateTerminalToolWindow)
    nmap <leader>tc <Action>(Terminal.OpenInTerminal)

    nmap <leader>/ :action FindInPath<CR>
    nmap <leader><space> :action GotoFile<CR>
    nmap <leader>e :NERDTree<CR>
    nmap <leader>E :action SelectIn<CR>
    nmap <leader>sr :action Replace<CR>
    nmap <leader>si :source ~/.ideavimrc<CR>
endif
